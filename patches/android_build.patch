diff build/core/binary.mk build/core/binary.mk
--- build/core/binary.mk
+++ build/core/binary.mk
@@ -221,6 +221,12 @@ endif
 ###########################################################
 LOCAL_ARM_MODE := $(strip $(LOCAL_ARM_MODE))
 ifeq ($(TARGET_ARCH),arm)
+# We currently only support thumb-2
+# build in arm mode if thumb-1 is set
+ifeq ($(strip $(TARGET_ARCH_THUMB_VERSION)),1)
+LOCAL_ARM_MODE := arm
+endif
+
 arm_objects_mode := $(if $(LOCAL_ARM_MODE),$(LOCAL_ARM_MODE),arm)
 normal_objects_mode := $(if $(LOCAL_ARM_MODE),$(LOCAL_ARM_MODE),thumb)
 
diff --git build/core/combo/TARGET_linux-arm.mk build/core/combo/TARGET_linux-arm.mk
index 3497662..8c36c84 100644
--- build/core/combo/TARGET_linux-arm.mk
+++ build/core/combo/TARGET_linux-arm.mk
@@ -70,14 +70,19 @@ TARGET_NO_UNDEFINED_LDFLAGS := -Wl,--no-undefined
 
 TARGET_arm_CFLAGS :=    -O2 \
                         -fomit-frame-pointer \
-                        -fstrict-aliasing    \
+                        -fno-strict-aliasing    \
                         -funswitch-loops
 
 # Modules can choose to compile some source as thumb.
+ifeq ($(strip $(TARGET_ARCH_THUMB_VERSION)),1)
 TARGET_thumb_CFLAGS :=  -mthumb \
                         -Os \
                         -fomit-frame-pointer \
                         -fno-strict-aliasing
+else
+TARGET_thumb_CFLAGS := $(TARGET_arm_CFLAGS)
+endif
+
 
 # Set FORCE_ARM_DEBUGGING to "true" in your buildspec.mk
 # or in your environment to force a full arm build, even for
